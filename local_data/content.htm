<h1>課程簡介</h1><p>計算機程式 - 2018 年 Spring 虎尾科技大學車輛工程系夜間部一年級</p><p>倉儲: <a href="https://github.com/mdecourse/vecp2018">https://github.com/mdecourse/vecp2018</a></p><p>議題: <a href="https://github.com/mdecourse/vecp2018/issues">https://github.com/mdecourse/vecp2018/issues</a></p><p><span style="background-color: #ffff00;">簡介</span></p><p>本學期的課程在教導學員使用 <a href="https://www.lua.org/">Lua</a> 程式語言, 並利用 <a href="https://www.lua.org/">Lua</a> 程式語言控制 <a href="http://www.coppeliarobotics.com/">V-rep</a> 平台中的機器人系統.</p><p><span style="background-color: #ffff00;">使用工具</span></p><p>可攜程式套件:</p><p>期中考前:&nbsp;&nbsp;<a href="https://drive.google.com/file/d/1ekR_kri-_UWlTd_f1vZano0N2-zzQUTn/view?usp=sharing">kmol_level1</a>&nbsp; - 7z 檔案 155 MB, 解壓縮後 380 MB&nbsp;</p><p>期中考後:&nbsp; <a href="https://drive.google.com/open?id=1bFnPyrOMhpNI2BWT6DgHURxAef3oYU4c">kmol2_1805</a>&nbsp; - 7z 檔案 340 MB, 解壓縮後 1.2 GB</p><p>機器人模擬平台: <a href="http://www.coppeliarobotics.com/">V-rep</a></p><p>程式語言: Lua</p><p><span style="background-color: #ffff00;">執行內容</span></p><p>第九週前以 3 人一組, 完成下列要求:</p><ol><li>整理 <a href="https://github.com/mdecourse/vecp2018/issues/11">https://github.com/mdecourse/vecp2018/issues/11</a> 中所列出的 Lua 程式語法</li><li>利用 <a href="http://mde.tw/vecp2018/lua/SchoolProject/">http://mde.tw/vecp2018/lua/SchoolProject/</a> 繪製虎尾科技大學校徽</li><li>利用 <a href="http://mde.tw/vecp2018/lua/SchoolProject/">http://mde.tw/vecp2018/lua/SchoolProject/</a> 繪製美國國旗</li><li>請將上述內容寫在各組的 vecp2018 倉儲中</li></ol><p>第十二週之後, 各組必須完成下列要求:</p><ol><li>每組自行建立一個 heroku 雲端網站, 內容為各組的期末報告</li><li>完成第十週 e-puck 迷宮行走程式, 並記錄抵達目的地所需時間, 時間越快者分數越高</li><li>根據<a href="https://github.com/mdecourse/vecp2018/blob/gh-pages/lua/Lua-Chinese.pdf">中文教材</a>將重點程式與用法整理在各組雲端網站中</li><li>&nbsp;分別完成 W13, W15 與 W17 週所提出的專案&nbsp;</li></ol><h2>Lua examples</h2>
<p>以下為&nbsp;<a href="https://github.com/mdecourse/vecp2018/blob/gh-pages/v-rep/YouBot_interactive.ttt">https://github.com/mdecourse/vecp2018/blob/gh-pages/v-rep/YouBot_interactive.ttt</a>&nbsp;場景中的控制程式</p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">-- 角度轉徑度函式
function deg2rad(deg)
   return deg*math.pi/180
end

-- 徑度轉角度函式
function rad2deg(rad)
   return rad*180/math.pi
end

-- null 函式
function nullFunc(arg)
   return arg
end

-- 切換徑度函式
function toggleRadians(ui,id,newVal)
   if (newVal==2) then
	  angleTo = deg2rad
	  angleFrom = rad2deg
   else
	  angleTo = nullFunc
	  angleFrom = nullFunc
   end	  
end

-- 設定各軸角度
applyJoints=function(jointHandles,joints)
    for i=1,#jointHandles,1 do
        simSetJointPosition(jointHandles[i],joints[i])
    end
end

-- 取得各軸角度
getJoints=function(jointHandles,angles)
   angles={0,0,0,0,0,0,0,0}
   for i=1,#jointHandles,1 do
	  angles[i]=simGetJointPosition(jointHandles[i])
   end
   return angles
end

-- 更新各軸角度字串
updateActualText=function(jointHandles, angles)
   local ang_str="( "
   for i=1,#jointHandles,1 do
	  -- simExtCustomUI_setLabelText(ui,5000+i,string.format('Actual = %+6.3f', angles[i]))
	  ang_str=ang_str..string.format("%6.3f, ", angles[i])
   end
   ang_str=string.sub(ang_str,1,-3)
   ang_str=ang_str.."  )"
   simExtCustomUI_setLabelText(ui,1237,ang_str)
end

function changeAllSliders(ui,q)
   for i=1,#jh,1 do
	  simExtCustomUI_setSliderValue(ui,4000+i,q[i]*1000)
	  simExtCustomUI_setLabelText(ui,3000+i,string.format('Reference = %+6.3f',q[i]))
   end
end

function sliderChange(ui,id,newVal)
   for i=1,#jh,1 do
	  if (id==4000+i) then
		 simExtCustomUI_setLabelText(ui,3000+i,string.format('Reference = %+6.3f',newVal/1000))
		 ref_ang[i]=newVal/1000
		 break
	  end
   end
end

function mysplit(inputstr, sep)
   if sep == nil then
	  sep = "%s"
   end
   local t={}
   for str in string.gmatch(inputstr, "([^"..sep.."]+)") do
	  table.insert(t,str)
   end
   return t
end

function fulljointEntry(ui,id,newVal)
   if (newVal==enteredString) then
	  enteredString=newVal
	  out=string.format("Already processed and sent this string... try editing")
	  simExtCustomUI_setLabelText(ui, 1236, out)
	  return
   end
   enteredString=newVal
   local q=mysplit(newVal,",")
   local out=""
   if (#q==0) then
	  out=string.format("No conversions completed &lt;br&gt; Are you separating with commas?")
	  simExtCustomUI_setLabelText(ui, 1236, out)
	  return
   elseif (#q&lt;#jh) then
	  out=string.format("Not enough configuration variables specified")
	  simExtCustomUI_setLabelText(ui, 1236, out)
	  return
   elseif (#q&gt;#jh) then
	  out=string.format("Too many configuration variables specified")
	  simExtCustomUI_setLabelText(ui, 1236, out)
	  return
   end
   for i=1,#q,1 do
	  qtest=tonumber(q[i])
	  if (qtest==nil) then
		 out=string.format("Could not convert entry number %d:&lt;br&gt; Entered='",i,q[i])..q[i].."'"
		 simExtCustomUI_setLabelText(ui, 1236, out)
		 return
	  else
		 q[i]=qtest
	  end
   end
   simExtCustomUI_setLabelText(ui, 1236, "Successful conversion:&lt;br&gt;"..newVal)
   changeAllSliders(ui, q)
   ref_ang = q
end


function jointEntry(ui,id,newVal)
   angle = tonumber(newVal)
   if (angle==nil) then
	  print("Could not convert number..."..newVal)
	  return
   end
   -- if (angle &gt;= 2*math.pi) then
   -- 	  print("Clipping angle to 2pi")
   -- 	  angle = 2*math.pi
   -- end
   -- if (angle &lt;= -2*math.pi) then
   -- 	  print("Clipping angle to -2pi")
   -- 	  angle = -2*math.pi
   -- end
   for i=1,#jh,1 do
	  if (id==7000+i) then
		 simExtCustomUI_setLabelText(ui,3000+i,string.format('Reference = %+6.3f',angle))
		 ref_ang[i]=angle
		 changeAllSliders(ui, ref_ang)
		 break
	  end
   end
end


function eul2so3_xyzr(a,b,c)
   -- Build empty array
   R = {}
   for i=1,3,1 do
	  R[i] = {}
	  for j=1,3,1 do
		 R[i][j] = 0
	  end
   end

   -- calculate constants
   local c1,s1 = math.cos(a),math.sin(a)
   local c2,s2 = math.cos(b),math.sin(b)
   local c3,s3 = math.cos(c),math.sin(c)
   
   -- fill out values:
   -- https://en.wikipedia.org/wiki/Euler_angles#Rotation_matrix
   R[1][1] = c2*c3
   R[1][2] = -c2*s3
   R[1][3] = s2
   R[2][1] = c1*s3+c3*s1*s2
   R[2][2] = c1*c3-s1*s2*s3
   R[2][3] = -c2*s1
   R[3][1] = s1*s3-c1*c3*s2
   R[3][2] = c3*s1+c1*s2*s3
   R[3][3] = c1*c2
   return R
end

function so3andp2se3(R,p)
   local g = {}
   for i=1,4,1 do
	  g[i] = {}
	  for j=1,4,1 do
		 if (i&lt;=3) then
			if (j&lt;=3) then
			   g[i][j] = R[i][j]
			else
			   g[i][j] = p[i]
			end
		 else
			if (j&lt;=3) then
			   g[i][j] = 0
			else
			   g[i][j] = 1
			end
		 end
	  end
   end
   return g
end

function createSE3string(pos,ori)
   -- first let's convert the orientation into an SE(3) matrix:
   local R=eul2so3_xyzr(ori[1], ori[2], ori[3])
   local g=so3andp2se3(R,pos)
   local out="&lt;b&gt;&lt;big&gt;&lt;tt&gt;"
   for i=1,4,1 do
	  out=out.."| "
	  for j=1,4,1 do
		 out=out..string.format(" %+6.3f",g[i][j])
	  end
	  out=out.." | &lt;br&gt;"
   end
   out=out.."&lt;/tt&gt;&lt;/big&gt;&lt;/b&gt;"
   return out
end

function calcSE3(ui, id, target, reference)
   pos=simGetObjectPosition(target,reference)
   ori=simGetObjectOrientation(target,reference)
   if pos and ori then
	  out=createSE3string(pos,ori)
	  simExtCustomUI_setLabelText(ui,id,out)
   end
end

function closeEventHandler(h)
    simAddStatusbarMessage('Window '..h..' is closing...')
    simExtCustomUI_hide(h)
end

if (sim_call_type==sim_childscriptcall_initialization) then
   -- joint limits:
   --    X: (-2, 2)
   --    Y: (-2, 2)
   --   Th: (-360, 360)
   --    1: (-168, 168)
   --    2: (-64, 89)
   --    3: (-150, 145)
   --    4: (-102, 102)
   --    5: (-160, 160)
   
   xml = [[
   &lt;ui closeable="false" onclose="closeEventHandler" resizable="true"&gt;
     &lt;tabs&gt;

	   &lt;tab title="Enter Config and SE(3) Value"&gt;
		 &lt;group&gt;
		   &lt;group layout="vbox"&gt;
			 &lt;label text="&lt;big&gt; Configuration Entry:&lt;/big&gt;" wordwrap="false" style="font-weight: bold;"/&gt;
			 &lt;label text="Enter 8 comma-separated angles" /&gt;
			 &lt;edit value="" oneditingfinished="fulljointEntry" /&gt;
			 &lt;label value="" wordwrap="false" /&gt;
			 &lt;label text="&lt;big&gt; Current configuration:&lt;/big&gt;" wordwrap="false" style="font-weight: bold;"/&gt;
			 &lt;group layout="vbox"&gt;
			   &lt;label value="" id="1237" wordwrap="true" /&gt;
			 &lt;/group&gt;
			 &lt;label text="&lt;big&gt; Messages:&lt;/big&gt;" wordwrap="false" style="font-weight: bold;"/&gt;
			 &lt;group layout="vbox"&gt;
			   &lt;label value="" id="1236" wordwrap="true" /&gt;
			 &lt;/group&gt;
		   &lt;/group&gt;
		   &lt;group&gt;
			 &lt;!-- &lt;group&gt; --&gt;
			   &lt;label text="&lt;big&gt; Current SE(3) (world to end-effector):&lt;/big&gt;" wordwrap="false" style="font-weight: bold;"/&gt;
			   &lt;!-- &lt;button text="Calculate SE(3) transform:" onclick="calcSE3" id="1235"/&gt; --&gt;
			   &lt;label text="T(&Icirc;&cedil;) = " wordwrap="false" /&gt;
			   &lt;label text="" id="1234" wordwrap="false" /&gt;
			 &lt;!-- &lt;/group&gt; --&gt;
			  &lt;!-- &lt;group&gt; --&gt;
			  &lt;!--   &lt;label text="&lt;big&gt; Settings:&lt;/big&gt;" wordwrap="false" style="font-weight: bold;"/&gt; --&gt;
			  &lt;!--   &lt;checkbox text="Use degrees instead of radians?" checked="false" onchange="toggleRadians" /&gt; --&gt;
			  &lt;!-- &lt;/group&gt; --&gt;
		   &lt;/group&gt;
		   &lt;group&gt;
			 &lt;!-- &lt;group&gt; --&gt;
			   &lt;label text="&lt;big&gt; Current SE(3) (world to youBot base):&lt;/big&gt;" wordwrap="false" style="font-weight: bold;"/&gt;
			   &lt;!-- &lt;button text="Calculate SE(3) transform:" onclick="calcSE3" id="1235"/&gt; --&gt;
			   &lt;label text="T(&Icirc;&cedil;) = " wordwrap="false" /&gt;
			   &lt;label text="" id="1235" wordwrap="false" /&gt;
			 &lt;!-- &lt;/group&gt; --&gt;
			  &lt;!-- &lt;group&gt; --&gt;
			  &lt;!--   &lt;label text="&lt;big&gt; Settings:&lt;/big&gt;" wordwrap="false" style="font-weight: bold;"/&gt; --&gt;
			  &lt;!--   &lt;checkbox text="Use degrees instead of radians?" checked="false" onchange="toggleRadians" /&gt; --&gt;
			  &lt;!-- &lt;/group&gt; --&gt;
		   &lt;/group&gt;
           &lt;stretch /&gt;
		 &lt;/group&gt;
	   &lt;/tab&gt;

	   
       &lt;tab title="Joint Angle Sliders"&gt;
		 &lt;group layout="grid" &gt;
           &lt;group&gt;
			 &lt;group layout="grid"&gt;
               &lt;label text="&lt;big&gt; Chassis X:&lt;/big&gt;" id="6001" wordwrap="false" style="font-weight: bold;"/&gt;
               &lt;label text="Reference =  0.000" id="3001" wordwrap="false" /&gt;
               &lt;!-- &lt;label text="Actual =  0.000" id="5001" wordwrap="false" /&gt; --&gt;
			 &lt;/group&gt;
			 &lt;hslider id="4001" tick-position="above" tick-interval="333" minimum="-2000" maximum="2000" onchange="sliderChange" /&gt;
			 &lt;group layout="grid"&gt;
			   &lt;label text="Enter position (m):" /&gt;
			   &lt;edit value="" id="7001" oneditingfinished="jointEntry" /&gt;
			 &lt;/group&gt;
		   &lt;/group&gt;
		   
		   &lt;group&gt;
			 &lt;group layout="grid"&gt;
			   &lt;label text="&lt;big&gt; Arm 2:&lt;/big&gt;" id="6005" wordwrap="false" style="font-weight: bold;"/&gt;
			   &lt;label text="Reference =  0.000" id="3005" wordwrap="false" /&gt;
			   &lt;!-- &lt;label text="Actual =  0.000" id="5005" wordwrap="false" /&gt; --&gt;
			 &lt;/group&gt;
			 &lt;hslider id="4005" tick-position="above" tick-interval="222" minimum="-1117" maximum="1553" onchange="sliderChange" /&gt;
			 &lt;group layout="grid"&gt;
			   &lt;label text="Enter joint angle (rad):" /&gt;
			   &lt;edit value="" id="7005" oneditingfinished="jointEntry" /&gt;
			 &lt;/group&gt;
		   &lt;/group&gt;
		   
		   &lt;br/&gt;
		   
		   &lt;group&gt;
			 &lt;group layout="grid"&gt;
               &lt;label text="&lt;big&gt; Chassis Y:&lt;/big&gt;" id="6002" wordwrap="false" style="font-weight: bold;"/&gt;
               &lt;label text="Reference =  0.000" id="3002" wordwrap="false" /&gt;
               &lt;!-- &lt;label text="Actual =  0.000" id="5002" wordwrap="false" /&gt; --&gt;
			 &lt;/group&gt;
			 &lt;hslider id="4002" tick-position="above" tick-interval="333" minimum="-2000" maximum="2000" onchange="sliderChange" /&gt;
			 &lt;group layout="grid"&gt;
			   &lt;label text="Enter position (m):" /&gt;
			   &lt;edit value="" id="7002" oneditingfinished="jointEntry" /&gt;
			 &lt;/group&gt;
		   &lt;/group&gt;

		   
		   &lt;group&gt;
			 &lt;group layout="grid"&gt;
			   &lt;label text="&lt;big&gt; Arm 3:&lt;/big&gt;" id="6006" wordwrap="false" style="font-weight: bold;"/&gt;
			   &lt;label text="Reference =  0.000" id="3006" wordwrap="false" /&gt;
			   &lt;!-- &lt;label text="Actual =  0.000" id="5006" wordwrap="false" /&gt; --&gt;
			 &lt;/group&gt;
			 &lt;hslider id="4006" tick-position="above" tick-interval="429" minimum="-2620" maximum="2530" onchange="sliderChange" /&gt;
			 &lt;group layout="grid"&gt;
			   &lt;label text="Enter joint angle (rad):" /&gt;
			   &lt;edit value="" id="7006" oneditingfinished="jointEntry" /&gt;
			 &lt;/group&gt;
		   &lt;/group&gt;

		   &lt;br/&gt;
		   
		   &lt;group&gt;
			 &lt;group layout="grid"&gt;
			   &lt;label text="&lt;big&gt; Chassis &Iuml;:&lt;/big&gt;" id="6003" wordwrap="false" style="font-weight: bold;"/&gt;
			   &lt;label text="Reference =  0.000" id="3003" wordwrap="false" /&gt;
			   &lt;!-- &lt;label text="Actual =  0.000" id="5003" wordwrap="false" /&gt; --&gt;
			 &lt;/group&gt;
			 &lt;hslider id="4003" tick-position="above" tick-interval="523" minimum="-3140" maximum="3140" onchange="sliderChange" /&gt;
			 &lt;group layout="grid"&gt;
			   &lt;label text="Enter joint angle (rad):" /&gt;
			   &lt;edit value="" id="7003" oneditingfinished="jointEntry" /&gt;
			 &lt;/group&gt;
		   &lt;/group&gt;

		   &lt;group&gt;
		   	 &lt;group layout="grid"&gt;
		   	   &lt;label text="&lt;big&gt; Arm 4:&lt;/big&gt;" id="6007" wordwrap="false" style="font-weight: bold;"/&gt;
		   	   &lt;label text="Reference =  0.000" id="3007" wordwrap="false" /&gt;
		   	   &lt;!-- &lt;label text="Actual =  0.000" id="5007" wordwrap="false" /&gt; --&gt;
		   	 &lt;/group&gt;
		   	 &lt;hslider id="4007" tick-position="above" tick-interval="296" minimum="-1780" maximum="1780" onchange="sliderChange" /&gt;
		   	 &lt;group layout="grid"&gt;
		   	   &lt;label text="Enter joint angle (rad):" /&gt;
		   	   &lt;edit value="" id="7007" oneditingfinished="jointEntry" /&gt;
		   	 &lt;/group&gt;
		   &lt;/group&gt;

		   &lt;br/&gt;
		   
		   &lt;group&gt;
			 &lt;group layout="grid"&gt;
			   &lt;label text="&lt;big&gt; Arm 1:&lt;/big&gt;" id="6004" wordwrap="false" style="font-weight: bold;"/&gt;
			   &lt;label text="Reference =  0.000" id="3004" wordwrap="false" /&gt;
			   &lt;!-- &lt;label text="Actual =  0.000" id="5004" wordwrap="false" /&gt; --&gt;
			 &lt;/group&gt;
			 &lt;hslider id="4004" tick-position="above" tick-interval="488" minimum="-2932" maximum="2932" onchange="sliderChange" /&gt;
			 &lt;group layout="grid"&gt;
			   &lt;label text="Enter joint angle (rad):" /&gt;
			   &lt;edit value="" id="7004" oneditingfinished="jointEntry" /&gt;
			 &lt;/group&gt;
		   &lt;/group&gt;

		   &lt;group&gt;
		   	 &lt;group layout="grid"&gt;
		   	   &lt;label text="&lt;big&gt; Arm 5:&lt;/big&gt;" id="6008" wordwrap="false" style="font-weight: bold;"/&gt;
		   	   &lt;label text="Reference =  0.000" id="3008" wordwrap="false" /&gt;
		   	   &lt;!-- &lt;label text="Actual =  0.000" id="5008" wordwrap="false" /&gt; --&gt;
		   	 &lt;/group&gt;
		   	 &lt;hslider id="4008" tick-position="above" tick-interval="481" minimum="-2890" maximum="2890" onchange="sliderChange" /&gt;
		   	 &lt;group layout="grid"&gt;
		   	   &lt;label text="Enter joint angle (rad):" /&gt;
		   	   &lt;edit value="" id="7008" oneditingfinished="jointEntry" /&gt;
		   	 &lt;/group&gt;
		   &lt;/group&gt;
		   
		 &lt;/group&gt;
		 
	   &lt;/tab&gt;

    &lt;/tabs&gt;
&lt;/ui&gt;
]]
    ui=simExtCustomUI_create(xml)
	-- get joints:
	jh={-1,-1,-1,-1,-1,-1,-1,-1}
	jh[1]=simGetObjectHandle('World_X_Joint')
	jh[2]=simGetObjectHandle('World_Y_Joint')
	jh[3]=simGetObjectHandle('World_Th_Joint')
    for i=4,#jh,1 do
	   jh[i]=simGetObjectHandle('Joint'..(i-3))
    end
	-- for i=1,#jh,1 do
	--    print(string.format("jh[%d] = %d",i,jh[i]))
	-- end
	-- base=simGetObjectHandle('ArmBase_Frame')
	world=simGetObjectHandle('WorldFrame')
	base=simGetObjectHandle('BaseVisual')
	ee=simGetObjectHandle('EE_Frame')
	-- fill out initial string:
	calcSE3(ui, 1234, ee, world)
	calcSE3(ui, 1235, base, world)
	-- array for reference angle
	ref_ang={0,0,0,0,0,0,0,0}
	-- array for storing when angles where manually entered
	enteredString=""
	-- angle parsing
	toggleRadians(ui,0,0)
end


if (sim_call_type==sim_childscriptcall_actuation) then
   applyJoints(jh, ref_ang)
   -- array for actual angle
   act_ang = getJoints(jh)
   updateActualText(jh, act_ang)
   calcSE3(ui, 1234, ee, world)
   calcSE3(ui, 1235, base, world)
end

if (sim_call_type==sim_childscriptcall_sensing) then
   
end

if (sim_call_type==sim_childscriptcall_cleanup) then
    simExtCustomUI_destroy(ui)
end
</pre>
<p>&nbsp;</p><h1>雲端網站</h1>
<p>這是位於 <a href="https://www.heroku.com">heroku</a> 的 <a href="https://github.com/chiamingyen/cmsimfly">CMSimfly</a> 網站 (網址為: <a href="http://a2015fallhw.herokuapp.com">http://a2015fallhw.herokuapp.com</a>&nbsp;) , 由於能在網頁中維護的 <a href="https://www.heroku.com">heroku</a> 網站, 必須與其他雲端儲存系統結合, 而本站是在近端維護後, 提交推送到 <a href="https://www.heroku.com">heroku</a>, 因此目前只能展示 <a href="https://git.heroku.com/a2015fallhw.git">https://git.heroku.com/a2015fallhw.git</a> 倉儲中的網際內容資料, 透過瀏覽器修改的內容, 將會不定期遭 <a href="https://www.heroku.com">heroku</a> 刪除.</p>
<p>儘管如此, 在近端維護後提交推送到遠端的資料維護模式, 仍可用來呈現網際內容管理相關程式的執行結果.</p>
<p>例如 (以下採 Python 程式編寫):</p>
<p><a href="/w1cda">w1cda 分組程式</a>&nbsp;</p>
<p><a href="/w7cda">w7cda 列出缺席名單</a></p>
<p><a href="/w5cdb">w5cdb 列出缺席名單</a></p>
<p><a href="/w7cdb">w7cdb 列出缺席名單</a></p>
<p><a href="/vecpw7">vecpw7 列出缺席名單</a></p>
<p>若改為 Web based Lua 程式, 執行結果如下:</p><h2>新增 heroku app</h2>
<p><span style="background-color: #ffff00;">登入 heroku</span></p>
<p>先在近端啟動 CMSimfly, 設法以網際模式協同維護內容後, 以 heroku login 登入 Heroku , 將近端內容提交推送到 Heroku 與同步 github 倉儲.</p>
<p>heroku login</p>
<p>git clone or git pull 後以 python&nbsp; app_run.py 啟動, 並以瀏覽器打開 <a>http://localhost:5000</a></p>
<p><span style="background-color: #ffff00;">平行批次檔指令</span></p>
<p>由於在近端啟動 CMSimfly 網站時, 希望以 batch 指令同時啟動 Flask 網際程式與近端網頁, 這時需要利用能平行開啟執行的 MParallel 工具, 從&nbsp;<a href="https://github.com/lordmulder/MParallel">https://github.com/lordmulder/MParallel&nbsp;</a>&nbsp;下載 mparallet.exe 後, 放入可攜系統的 y:\ 目錄, 建立 run.bat 如下:</p>
<pre class="brush:ps;auto-links:false;toolbar:false" contenteditable="false">MParallel.exe --count=2 python app_run.py : C:\Program Files (x86)\Google\Chrome\Application\chrome.exe "http://localhost:5000"
</pre>
<p>啟動後便可同時執行近端 app_run.py 與 chrome 網頁開啟.</p>
<p><span style="background-color: #ffff00;">在近端維護網站內容</span></p>
<p>CMSimfly&nbsp; 在區網或廣域網路中執行, 登入後可以維護網站內容</p>
<p><span style="background-color: #ffff00;">提交推送網站版本</span></p>
<p>提交推送到 Heroku</p>
<p>git add .</p>
<p>git commit -m "提交新版本"</p>
<p>git push</p>
<p><span style="background-color: #ffff00;">同步提交推送到 Github</span></p>
<p>先設定 git remote add 到對應的 github 空倉儲</p>
<p>git remote add github <a href="https://github.com/mdecourse/wcms-scrum3.git">https://github.com/mdecourse/wcms-scrum3.git</a></p>
<p>接著再將版本推送到 wcm-scrum3</p>
<p>git push github</p><h1>Lua 語法</h1>
<p>(這個網際內容管理自帶網際 Lua 程式環境, 使用者可以直接套用相同架構, 在各頁面中納入網際 Lua 程式)</p>
<p><a href="/lua">Lua 網際程式環境</a></p>
<p>以下為網際 Lua 系統中的 <a href="/lua?filename=fun1">Canvas 繪圖範例</a>:</p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">-- 導入 "js" 模組
local js = require "js"
-- global 就是 javascript 的 window
local global = js.global
local document = global.document
-- html 檔案中 canvas　id 設為 "canvas"
local canvas = document:getElementById("canvas")
-- 將 ctx 設為 canvas 2d 繪圖畫布變數
local ctx = canvas:getContext("2d")

-- 屬性呼叫使用 . 而方法呼叫使用 :
-- 設定填圖顏色
ctx.fillStyle = "rgb(200,0,0)"
-- 設定畫筆顏色
ctx.strokeStyle = "rgb(0,0,200)"

-- 乘上 deg 可轉為徑度單位
deg = math.pi / 180

-- 建立多邊形定點位置畫線函式
function star(radius, xc, yc, n)
    --radius = 100
    --xc = 200
    --yc = 200
    xi = xc + radius*math.cos((360/n)*deg+90*deg)
    yi = yc - radius*math.sin((360/n)*deg+90*deg)
    ctx:beginPath()
    ctx:moveTo(xi,yi)
    for i = 2, n+1 do
        x = xc + radius*math.cos((360/n)*deg*i+90*deg)
        y = yc - radius*math.sin((360/n)*deg*i+90*deg)
        ctx:lineTo(x,y)
    end
end

-- 以下利用多邊形畫線函式呼叫執行畫框線或填入顏色
-- 畫五邊形框線
star(100, 200, 200, 5)
ctx:closePath()
ctx:stroke()

-- 填三角形色塊
star(50, 350, 200, 3)
ctx:closePath()
ctx:fill()

-- 改變畫線顏色後, 畫七邊形框線
ctx.strokeStyle = "rgb(0,200,20)"
star(50, 450, 200, 7)
ctx:closePath()
ctx:stroke()
    </pre>
<p>&nbsp;</p><h1>數學方程式</h1>
<p>(以下的數學方程式採用&nbsp;<a href="https://scrum-3.github.io/web/math/MathJax.js?config=TeX-MML-AM_CHTML">https://scrum-3.github.io/web/math/MathJax.js?config=TeX-MML-AM_CHTML</a>&nbsp;連結中的程式庫, 因此無論在近端或雲端, 都必須上網才能正確顯示數學方程式)</p>
<p>當 $a \ne 0$, 一元二次方程式 (ax^2 + bx + c = 0) 有兩組解, 可以寫成: $$x = {-b \pm \sqrt{b^2-4ac} \over 2a}.$$</p>
<p>上述原始碼為:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">當 $a \ne 0$, 一元二次方程式 (ax^2 + bx + c = 0) 有兩組解, 可以寫成: $$x = {-b \pm \sqrt{b^2-4ac} \over 2a}.$$</pre>
<p>希臘字母:&nbsp;<a href="https://en.wikipedia.org/wiki/Greek_alphabet">https://en.wikipedia.org/wiki/Greek_alphabet</a>&nbsp;</p>
<p>&nbsp;</p><h1>V-rep</h1>
<p>(V-rep 的內嵌程式環境採用 Lua, 因此可用來控制相關機電系統的模擬, 而 V-rep 也可以透過 remote API 以 Python 程式控制動態系統模擬)</p>
<p>Virtual robot experimentation platform 虛擬機器人實驗平台</p>
<p>The robot simulator V-REP, with integrated development environment, is based on a distributed control architecture: each object/model can be individually controlled via an embedded script, a plugin, a ROS or BlueZero node, a remote API client, or a custom solution. This makes V-REP very versatile and ideal for multi-robot applications. Controllers can be written in C/C++, Python, Java, Lua, Matlab or Octave.</p>
<p>V-REP is used for fast algorithm development, factory automation simulations, fast prototyping and verification, robotics related education, remote monitoring, safety double-checking, etc.</p>
<p>功能-&nbsp;<a href="http://www.coppeliarobotics.com/features.html">http://www.coppeliarobotics.com/features.html</a>&nbsp;</p>
<p>使用授權:&nbsp;<a href="http://www.coppeliarobotics.com/licensing.html">http://www.coppeliarobotics.com/licensing.html</a>&nbsp;<a href="http://www.coppeliarobotics.com/assets/v-replicensingoverview.pdf">使用授權說明</a></p>
<p>使用者手冊:&nbsp;<a href="http://www.coppeliarobotics.com/helpFiles/index.html">http://www.coppeliarobotics.com/helpFiles/index.html</a>&nbsp;<a href="http://www.coppeliarobotics.com/contributions.html">其他資料</a></p>
<p><a href="http://www.coppeliarobotics.com/otherscenes.html">額外範例場景</a></p>
<p>論壇:&nbsp;<a href="http://www.forum.coppeliarobotics.com/">http://www.forum.coppeliarobotics.com/</a>&nbsp;</p>
<p>概述:<a href="http://www.coppeliarobotics.com/assets/v-repoverviewpresentation.pdf">http://www.coppeliarobotics.com/assets/v-repoverviewpresentation.pdf</a>&nbsp;</p><h2>動態分析引擎</h2>
<p><a href="http://bulletphysics.org">http://bulletphysics.org</a>&nbsp;, <a href="https://github.com/bulletphysics/bullet3">bullet3 on github</a></p>
<p><a href="http://www.ode.org/">http://www.ode.org/</a>&nbsp;</p>
<p><a href="http://blog.wolfire.com/2010/03/Comparing-ODE-and-Bullet">ode 與 bullet 比較</a></p>
<p>2015.10 已經被微軟併購的&nbsp;<a href="https://www.havok.com">https://www.havok.com</a>&nbsp;</p>
<p><a href="https://www.algoryx.se">https://www.algoryx.se</a>&nbsp;與&nbsp;<a href="http://www.algodoo.com">http://www.algodoo.com</a>&nbsp;(教育市場)</p><h2>客製化程式</h2>
<p>resizable floor custumization script:</p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">function updateFloor()
    local c=readInfo()
    local sx=c['sizes'][1]/5
    local sy=c['sizes'][2]/5
    local sizeFact=simGetObjectSizeFactor(model)
    simSetObjectParent(e1,-1,true)
    local child=simGetObjectChild(model,0)
    while child~=-1 do
        simRemoveObject(child)
        child=simGetObjectChild(model,0)
    end
    local xPosInit=(sx-1)*-2.5*sizeFact
    local yPosInit=(sy-1)*-2.5*sizeFact
    local f1,f2
    for x=1,sx,1 do
        for y=1,sy,1 do
            if (x==1)and(y==1) then
                simSetObjectParent(e1,model,true)
                f1=e1
            else
                f1=simCopyPasteObjects({e1},0)[1]
                f2=simCopyPasteObjects({e2},0)[1]
                simSetObjectParent(f1,model,true)
                simSetObjectParent(f2,f1,true)
            end
            local p=simGetObjectPosition(f1,sim_handle_parent)
            p[1]=xPosInit+(x-1)*5*sizeFact
            p[2]=yPosInit+(y-1)*5*sizeFact
            simSetObjectPosition(f1,sim_handle_parent,p)
        end
    end
end

function getDefaultInfoForNonExistingFields(info)
    if not info['version'] then
        info['version']=0
    end
    if not info['sizes'] then
        info['sizes']={1,1}
    end
end

function readInfo()
    local data=simReadCustomDataBlock(model,'XYZ_FLOOR_INFO')
    if data then
        data=simUnpackTable(data)
    else
        data={}
    end
    getDefaultInfoForNonExistingFields(data)
    return data
end

function writeInfo(data)
    if data then
        simWriteCustomDataBlock(model,'XYZ_FLOOR_INFO',simPackTable(data))
    else
        simWriteCustomDataBlock(model,'XYZ_FLOOR_INFO','')
    end
end

function updateUi()
    local c=readInfo()
    local sizeFact=simGetObjectSizeFactor(model)
    simExtCustomUI_setLabelText(ui,1,'X-size (m): '..string.format("%.2f",c['sizes'][1]*sizeFact),true)
    simExtCustomUI_setSliderValue(ui,2,c['sizes'][1]/5,true)
    simExtCustomUI_setLabelText(ui,3,'Y-size (m): '..string.format("%.2f",c['sizes'][2]*sizeFact),true)
    simExtCustomUI_setSliderValue(ui,4,c['sizes'][2]/5,true)
end

function sliderXChange(ui,id,newVal)
    local c=readInfo()
    c['sizes'][1]=newVal*5
    writeInfo(c)
    updateUi()
    updateFloor()
end

function sliderYChange(ui,id,newVal)
    local c=readInfo()
    c['sizes'][2]=newVal*5
    writeInfo(c)
    updateUi()
    updateFloor()
end

function closeEventHandler(h)
    simRemoveScript(sim_handle_self)
end

function showDlg()
    if not ui then
    xml = [[
&lt;ui title="Floor Customizer" closeable="true" onclose="closeEventHandler" resizable="false" activate="false"&gt;
    &lt;group layout="form" flat="true"&gt;
        &lt;label text="X-size (m): 1" id="1"/&gt;
        &lt;hslider tick-position="above" tick-interval="1" minimum="1" maximum="5" onchange="sliderXChange" id="2"/&gt;
        &lt;label text="Y-size (m): 1" id="3"/&gt;
        &lt;hslider tick-position="above" tick-interval="1" minimum="1" maximum="5" onchange="sliderYChange" id="4"/&gt;
    &lt;/group&gt;
    &lt;label text="" style="* {margin-left: 400px;}"/&gt;
&lt;/ui&gt;
]]
        ui=simExtCustomUI_create(xml)
        if 2==simGetInt32Parameter(sim_intparam_platform) then
            -- To fix a Qt bug on Linux
            simAuxFunc('activateMainWindow')
        end
        updateUi()
    end
end

function hideDlg()
    if ui then
        simExtCustomUI_destroy(ui)
        ui=nil
    end
end

if (sim_call_type==sim_customizationscriptcall_initialization) then
    model=simGetObjectAssociatedWithScript(sim_handle_self)
    e1=simGetObjectHandle('ResizableFloor_5_25_element')
    e2=simGetObjectHandle('ResizableFloor_5_25_visibleElement')
	simSetScriptAttribute(sim_handle_self,sim_customizationscriptattribute_activeduringsimulation,false)
end

if (sim_call_type==sim_customizationscriptcall_nonsimulation) then
    local s=simGetObjectSelection()
    if s and #s&gt;=1 and s[1]==model then
        showDlg()
    else
        hideDlg()
    end
end

if (sim_call_type==sim_customizationscriptcall_lastbeforesimulation) then
    hideDlg()
end

if (sim_call_type==sim_customizationscriptcall_cleanup) then
    hideDlg()
end
</pre>
<p>&nbsp;</p>